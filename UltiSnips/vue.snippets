# This snippet file enables vue files to use tabs for html, js and css. It also
# includes some vue-specific html-like snippets, as well as some general
# boilerplate code for vue.

extends html, javascript, css

# These snippets form a port of Sarah Drasner's vue-sublime-snippets

# some html-like snippets

snippet slot
	<slot></slot>
endsnippet

snippet template
	<template></template>
endsnippet

snippet transition
	<transition></transition>
endsnippet

# The following snippets create more complex boilerplate code.

snippet vbase
	<template>
		<div>

		</div>
	</template>

	<script>
		export default{
			${0}
		}
	</script>

	<style scoped>

	</style>
endsnippet

snippet vimport:c
	import ${1:Name} from './components/$1.vue';

	export default {
		components: {
			$1
		}
	}
endsnippet

snippet vactions
	actions: {
		${1:updateValue}({commit}, ${2:payload}) {
			commit($1, $2);
		}
	}
endsnippet

# Add in js animation hooks
snippet vanim:js:el
	<transition
	  @before-enter="beforeEnter"
	  @enter="enter"
	  @after-enter="afterEnter"
	  @enter-cancelled="enterCancelled"

	  @before-Leave="beforeLeave"
	  @leave="leave"
	  @after-leave="afterLeave"
	  @leave-cancelled="leaveCancelled"
	  :css="false">

	 </transition>
endsnippet

snippet vanim:js:method
	methods: {
		beforeEnter(el) {
			console.log('beforeEnter');
		},
		enter(el, done) {
			console.log('enter');
			done();
		},
		afterEnter(el) {
			console.log('afterEnter');
		},
		enterCancelled(el, done) {
			console.log('enterCancelled');
		},
		beforeLeave(el) {
			console.log('beforeLeave');
		},
		leave(el, done) {
			console.log('leave');
			done();
		},
		afterLeave(el) {
			console.log('afterLeave');
		},
		leaveCancelled(el, done) {
			console.log('leaveCancelled');
		}
	}
endsnippet

snippet vcl
	@click="${1}"
endsnippet

snippet vdata
	data() {
		return {
			${1:key}: ${2:value}
		};
	}
endsnippet

snippet vfilter
	filters: {
		${1:fnName}: function(${2:value}) {
			return;
		}
	}
endsnippet

snippet vfor
	<div v-for="${1:item} in ${2:items}" :key="$1.id">
		{{ $1 }}
	</div
endsnippet

snippet vgetters
	getters: {
		${1:value}: state => {
			return state.$1;
		}
	}
endsnippet

snippet vimport
	import ${1:New} from './components/$1.vue';
endsnippet

snippet vkeep
	<keep-alive>
		<component :is="">
			<p>default</p>
		</component>
	</keep-alive>
endsnippet

snippet vmixin
	const ${1:mixinName} = {
		mounted() {
			console.log('hello from mixin!')
		},
	}
	const ${2:Component} = Vue.extend({
		mixins: [$1]
	})
endsnippet

snippet vmutations
	mutations: {
		${1:updateValue}(state, ${3:payload}) => {
			state.${2:value} = $3;
		}
	}
endsnippet

snippet vprops:d
	${1:propName}: {
	  type: ${2:Number},
	  default: ${0}
	},
endsnippet

snippet vprops
	${1:propName}: {
		type: ${2:Number}
	},
endsnippet

snippet vstore
	import Vue from 'vue';
	import Vuex from 'vuex';

	Vue.use(Vuex);

	export const store = new Vuex.Store({
		state: {
			${1:key}: ${2:value}
		}
	});
endsnippet


snippet ttlist
  <template>
    <div>
<Row>
      <Form
        ref="form"
        :model="search"
        :rules="ruleForm"
        label-position="right"
        :label-width="80"
        inline
      >
        <Row>
          <FormItem prop="status" label="状态">
            <CheckboxGroup size="large" v-model="form.status" class="m-l-30">
              <Checkbox
                v-for="item in checkStatusArray"
                :item="item"
                :key="item.label"
                :label="item.label"
                >{{ item.value }}
              </Checkbox>
            </CheckboxGroup>
          </FormItem>
        </Row>
        <Row>
          <FormItem prop="period" label="筛选">
            <strong class="m-l-30">日期</strong>
            <Select v-model="period" class="width100" style="margin-left:10px">
              <Option
                v-for="(item, index) in periodList"
                :value="item.value"
                :key="index"
                >{{ item.label }}</Option
              >
            </Select>
            <span style="margin-left: 10px" v-if="period !== 'custom'"
              >{{ getDateString(search.start_date) }} 至
              {{ getDateString(search.end_date) }}</span
            >
            <div
              style="display:inline-block;margin-left: 10px"
              v-if="period === 'custom'"
            >
              <DatePicker
                type="date"
                placeholder="开始日期"
                v-model="search.start_date"
                class="width120"
              >
              </DatePicker>
              至
              <DatePicker
                type="date"
                placeholder="截止日期"
                v-model="search.end_date"
                class="width120"
              >
              </DatePicker>
            </div>
          </FormItem>

          <FormItem prop="purchase_item_type" label="采购类别">
            <Select
              v-model="search.purchase_item_type"
              style="margin-left:10px;width:100px"
            >
              <Option
                v-for="item in purchaseTypeList"
                :key="item.value"
                :value="item.value"
                >{{ item.label }}</Option
              >
            </Select>
          </FormItem>

          <FormItem prop="keyword" label="关键词">
            <Input
              clearable
              search
              style="margin-left:10px;width:200px"
              v-model="search.keyword"
              placeholder="名称或采购编号"
            />
          </FormItem>
          <Button type="error" style="margin-left:30px" @click="clearSearch"
            >清空</Button
          >
        </Row>
      </Form>
    </Row>
      <Page
        class="m-20"
        :total="total"
        @on-change="onPageNumChange"
        show-total
        :current="currentPageNum"
        :page-size="pageSize"
      />
      <Table
        class="m-20"
        size="small"
        :data="$1Data"
        :loading="loading"
        border
        :columns="${1/\w+\s*/\$0/g}Columns"
      >
      </Table>
      <Page
        class="m-20"
        :total="total"
        @on-change="onPageNumChange"
        show-total
        :current="currentPageNum"
        :page-size="pageSize"
      />
    </div>
  </template>

  <script>
  import {get${1/\w+\s*/\u$0/g}Api} from '@/api/data'
import { handleOperationRes } from '../../libs/util'
    export default{
  data() {
    return {
      checkStatusArray: [
        { label: 'draft,submitted', value: '进行中' },
        { label: 'recalled', value: '已撤销' },
        { label: 'finished', value: '合同已签署' }
      ],
      period: '1m',
      periodList: [
        {
          value: '1m',
          label: '本月'
        },
        {
          value: '3m',
          label: '本季度'
        },
        {
          value: '1y',
          label: '本年'
        },
        {
          value: 'custom',
          label: '自定义'
        }
      ],
        total:0,
        currentPageNum:1,
        pageSize:20,
        loading:false,
        ${1/\w+\s*/\$0/g}Data:[],
        search:{
            start_date:null,
            end_date:null,
            keyword:null
            },
      ruleForm: {
        status: [
          {
            required: true,
            type: 'array',
            min: 1,
            message: '请至少选中一个状态',
            trigger: 'blur'
          }
        ]
      }
    };
    },
    computed:{
        ${1/\w+\s*/\$0/g}Columns(){
            return [
        { title: 'Name', key: 'name', sortable: true },
        { title: 'Email', key: 'email', editable: true },
        { title: 'Create-Time', key: 'createTime' },
        {
          title: 'Handle',
          key: 'handle',
          options: ['delete'],
          button: [
            (h, params, vm) => {
              return h(
                'Poptip',
                {
                  props: {
                    confirm: true,
                    title: '你确定要删除吗?'
                  },
                  on: {
                    'on-ok': () => {
                      vm.$emit('on-delete', params)
                      vm.$emit(
                        'input',
                        params.tableData.filter(
                          (item, index) => index !== params.row.initRowIndex
                        )
                      )
                    }
                  }
                },
                [h('Button', '自定义删除')]
              )
            }
          ]
        }
      ]
            }
        },
    methods:{
        handleSearch(){
            this.search= {
                page_num:1,
                page_size:20
                }
        },
        init${1/\w+\s*/\$0/g}(search){
            if(!search){
                return
                }
          this.loading = true
          get${1/\w+\s*/\u$0/g}Api(search).then(res => {
            res = res.data
            if (res.meta.code === 0) {
              this.${1/\w+\s*/\$0/g}Data= res.data.rows
              this.total = res.data.total
            }
            this.loading = false
            handleOperationRes(this, res, false, null)
          })
        },
        onPageNumChange: function (currentPage) {
          this.currentPageNum = currentPage
        }
    },
    watch:{
    search: {
      handler (val) {
        this.handleSubmit('form')
      },
      deep: true
    },
    period: {
      handler (val) {
        this.setDate()
      }
    },
    route: {
      handler (val) {
        this.getPurchaseRequestList(this.$route.query)
      },
      deep: true
    },
        },
    created(){
        this.handleSearch()
        this.init${1/\w+\s*/\$0/g}(this.search)
    }
  }
  </script>

  <style scoped>

  </style>
endsnippet

snippet ttview
<template>
    <div class="p-20">
      <h2>查看供应商</h2>
      <Divider></Divider>
      <Table size="small"
             class="m-20"
             :data="summary"
             :loading="loading"
             border
             :columns="columns">
      </Table>
    </div>
</template>

<script>
import { getSupplierApi } from '@/api/data'
import { handleOperationRes } from '../../libs/util'
export default {
  name: 'supplierView',
  data: function () {
    return {
      loading: false,
      form: {
        name: '',
        contact_name: '',
        email: '',
        phone: '',
        address: '',
        website: '',
        description: '',
        accounts: []
      },
      rules: {
        name: [{ required: true, message: '请输入供应商名称', trigger: 'blur' }],
        description: [{ required: true, message: '请输入供应商描述', trigger: 'blur' }]
      },
      columns: [{
        title: '项目',
        key: 'item',
        render: (h, params) => {
          return h('strong', {}, params.row.item)
        }
      }, {
        title: '值',
        key: 'value',
        render: (h, params) => {
          if (typeof params.row.value === 'object') {
            if (params.row.value.link) {
              return h('a', {
                attrs: {
                  target: '_blank',
                  href: params.row.value.link
                }
              }, params.row.value.text)
            } else {
              return h('strong', {
                class: params.row.value.class,
                style: params.row.value.style
              }, params.row.value.text)
            }
          } else {
            return h('span', {}, params.row.value)
          }
        }
      }],
      supplier: null
    }
  },
  computed: {
    supplierId () {
      return parseInt(this.$route.params.supplier_id)
    },
    summary () {
      if (!this.supplier) {
        return []
      }

      return [{
        item: '供应商名称',
        value: this.supplier.name
      }, {
        item: '联系人',
        value: this.supplier.contact_name
      }, {
        item: '邮件',
        value: this.supplier.email ? {
          text: this.supplier.email,
          link: 'mailto:' + this.supplier.email
        } : '(无)'
      }, {
        item: '电话',
        value: this.supplier.phone
      }, {
        item: '地址',
        value: this.supplier.address
      }, {
        item: '网站',
        value: this.supplier.website ? {
          text: this.supplier.website,
          link: !/^http(|s):\/\//.test(this.supplier.website.toLowerCase()) ? 'http://' + this.supplier.website : this.supplier.website
        } : '(无)'
      }, {
        item: '供应商描述',
        value: this.supplier.description
      }]
    }
  },
  methods: {
    getSupplier () {
      getSupplierApi(this.supplierId).then(res => {
        this.loading = false
        res = res.data
        handleOperationRes(this, res, false, null)
        if (res.meta.code === 0) {
          this.supplier = res.data.supplier
          let self = this
          let items = ['name', 'description', 'contact_name', 'email', 'phone', 'address', 'website', 'accounts']
          items.forEach(item => {
            if (self.supplier[item]) {
              self.form[item] = self.supplier[item]
            } else {
              self.form[item] = (item === 'accounts') ? [] : ''
            }
          })
        }
      })
      this.loading = true
    }
  },
  mounted () {
    this.getSupplier()
  }
}
</script>

<style scoped>

</style>
endsnippet
