snippet pa
package main

import (
    "fmt"
)

func main(){
    ${1}
}
endsnippet

snippet fu
func ${1}(${2}) ${3} {
    ${4}
}
endsnippet

snippet pr
println(${1})
endsnippet

snippet ty
type ${1} struct {
    ${2}
}
endsnippet

snippet t
true${1}
endsnippet

snippet f
false${1}
endsnippet

snippet r
return${1}
endsnippet

snippet s
string${1}
endsnippet

snippet fpl
fmt.Println("${1}")
endsnippet

snippet fpf
fmt.Printf("${1}", ${2})
endsnippet

snippet err
if err != nil {
    ${1}
}
endsnippet

snippet /*
/*
${1}


*/
endsnippet

snippet ystroute
app.Get("/meetings/{id:int64}/cohostings", middlewareSetMeeting, getMeetingCoHostings).Name = "meetingCoHostings"
endsnippet

snippet ystsrv
func getMeetingCoHostings(ctx iris.Context) {
	id := ctx.Params().GetInt64Default("id", 0)
	page := ctx.URLParamInt64Default("page", 0)
	res, err := superUserClient().MeetingCoHostings(
		genCtxToBackend(ctx),
		&pb.SuperUserMeetingCoHostingsRequest{
			MeetingID: id,
			Page:      page,
		},
	)
	if err != nil {
		glog(ctx).Error(err)
		viewError(ctx, err)
		return
	}

	ctx.ViewData("cohostings", res.CoHostings)
	err = ctx.View("meetings/cohostings.html")
	if err != nil {
		glog(ctx).Error(err)
	}
}
endsnippet
